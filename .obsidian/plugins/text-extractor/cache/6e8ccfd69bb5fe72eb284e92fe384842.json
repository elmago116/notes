{"path":"Clippings/PDF/iMapping_Wikis_-_Towards_a_Graphical_Environment_f.pdf","text":"See discussions, st ats, and author pr ofiles for this publication at: https://www.r esearchgate.ne t/publication/220706586 iMapping Wikis - Towards a Graphical Environment for Semantic Knowledge Management. Conference Paper · January 2006 Source: DBLP CITATIONS 5 READS 233 3 author s, including: Heiko Haller Infinity Maps GmbH 21 PUBLICATIONS   1,061 CITATIONS    SEE PROFILE Max Völkel IT Beratung Dr. Max V ölkel 51 PUBLICATIONS   1,535 CITATIONS    SEE PROFILE All content following this page was uploaded by Heiko Haller on 04 June 2014. The user has requested enhancement of the downloaded file. iMapping Wikis— Towards a Graphical Environment for Semantic Knowledge Management Heiko Haller, Felix Kugel, Max V¨olkel Forschungszentrum Informatik (FZI), University of Karlsruhe, Germany {heiko.haller, max.voelkel, felix.kugel}@fzi.de, http://www.fzi.de/ipe Abstract. iMapping is a visual technique for structuring information objects. It is based on research in the ﬁelds of visual mapping tech- niques, Information Visualisation and cognitive psychology. iMapping uses a Zooming User Interface to facilitate navigation and to help users maintain an overview in the knowledge space. An iMap is comparable to a large whiteboard where wiki-pages can be positioned like post-its but also nested into each other. Augmenting Wikis by providing spatial browsing and zooming facilities makes it easier to structure content in an intuitive way. Especially semantic wikis, which typically contain more ﬁne-grained content, and stress the structure between information items, can beneﬁt from a graphical approach like iMapping, that allows to dis- play multiple such items and multiple wiki-pages in one view. This paper describes the iMapping approach in general, and brieﬂy how it will be applied as a rich client front-end to the SemWiki engine. 1 Introduction Wikis have proven to be useful devices to easily store and manage structured in- formation, and are also increasingly being used for Personal Knowledge Manage- ment. Semantic technologies however have not found widespread use so far. Using wikis to also author formal (semantic) knowledge structures seems a promising approach. However for these semantic technologies to be widely used, it is crucial that they are very easy to author and that they do not constrict the user in his work. Also hypertext research has shown, that users often get “lost in hyper- space” when browsing complex hypermedia without additional navigational help [1]. When semantically formalised knowledge structures are being used, content typically becomes more ﬁne grained and the content structure, i.e. the relations between objects gain importance. This stresses the need for user interfaces that facilitate navigating and authoring such structures without loosing orientation. Nowadays’ ontology editors appear to be too complicated for every-day light- weight use. Outside the wiki and semantics world however, exist quite a number ot visual mapping techniques (like Mind-Maps, Concept Maps and others), that provide easy ways to rather intuitively structure ﬁne grained bits of information. iMapping is a new visual mapping approach based on Zooming User Inter- faces, that tries to combine the strengths of several established mapping tech- niques and go beyond them. It is meant to support easy informal note taking as well as semi- and fully formalized knowledge engineering in the same powerful yet easy-to-use environment. An iMap is like a large pin board, where wiki pages can be spatially arranged thus enabling users to gain visual overview over several wiki pages at once. Be- sides classical browsing, an iMapping-enabled wiki can be navigated by zooming through. We believe that the iMapping approach may well facilitate the use of wikis-especially when they go semantic. 2 Background Since external knowledge repositories like wikis usually represent human knowl- edge and are maintained by humans, it appears sensible to make the UI as cog- nitively adequate as possible, to enhance the link between mental and external models. Unlike text, diagrammatic knowledge representations carry a structural analogy to the content they represent. In other words: A diagram’s structure looks similar to the structure it is about. A map of Europe looks somehow like Europe from above. A ﬂow-chart depicts the structure of a process. A text doesn’t—It takes a longer way in the user’s mind until it can be related to the user’s mental model [2]. Enabling users to spatially arrange information items al- lows the creation of such diagrammatic depictions that give an intuitive overview over a subject matter. This is the very basis of iMapping. 2.1 Related Work Microcontent Some Wikis, like e.g. SnipSnap 1, already allow including other wiki pages in a page so, instead of having to follow a link, the user can see the target page inline. This is a ﬁrst step into the direction of microcontent (”content that conveys one primary idea or concept [and] is accessible through a single deﬁnitive URL” 2), which is useful to avoid redundancies, because most pieces of information are relevant in diﬀerent contexts. In the same way, pages can be nested into other pages in an iMap. This leads to a diﬀerent conceptualisation of what a wiki page is: many pages will just be little snippets of text, while other pages will mainly contain such snippets or other resources, thus functioning as aggregators. Semantic Desktops and Wikis One of the ﬁrst Semantic Desktop systems, that lets the user freely specify semantic relations between typed information items on a topic maps basis, is DeepaMehta [3]. It provides a graph-based UI in a thin client. Once an item (or relation) has been speciﬁed (in a topic map), 1 see http://snipsnap.org 2 see http://en.wikipedia.org/wiki/Microcontent DeepaMehta keeps it in a background repository on the server independent from whether they are still part of an actual topic map. This separation between the structural model and visual model makes sense, also for iMapping, because it allows multiple (visual) instances of an item to be used in diﬀerent contexts or locationsmuch like hard links in a Unix ﬁle system. Some Semantic Wikis like SemWiki [4] work in a similar way, but browser based and without a graphical UI. Others, like SemperWiki [5], are made for local, personal use only and feature an optimized WYSIWYG UI 3. Visual Mapping Techniques Visual mapping techniques are methods to graphically represent knowledge structures. Most of them have been developed as paper-based techniques for brainstorming, learning facilitation, outlining or to elicit knowledge structures. Some of them have proven to be very useful in Per- sonal Knowledge Management, especially for tasks like gathering and structuring ideas and acquiring an overview on a certain domain. For an overview on visual mapping techniques, their cognitive psychological background and an evaluation of some existing techniques and tools, see [6]. In brief, all of these mapping tech- niques are quite helpful for some purposes but have constraint paradigms that make them useless for others. Mind-Maps for example, provide an easy-to-understand tree-like structure useful for outlining a topic or sorting items. But it is suitable to depict the relational structure between items. Concept Maps on the other hand have a graph-based structure that em- phasizes these relations. But they are not as easy to handle, because explicitly specifying all these relations is too laborious e.g. for a fast gathering of keywords. “Spatial Hypertext” is yet another approach. The basic idea is to view a self-contained hypertext (like a wiki is) from an overview perspective, drilling down to single pages (which tend towards microcontent). However the Spatial Hypertext paradigm expressly abandons the concept of explicitly stating rela- tions between objects and uses spatial positioning as the basic structure. To fuzzily relate two objects, they are simply placed near to each other, but maybe not quite as near as to a third object. This allows for so-called “constructive ambiguity” [7] and is a very intuitive way to deal with vague relations and or- ders. While Spatial Hypertext in its pure form is not suitable to author formal knowledge structures like needed in semantic wikis, the general approach may well be used to augment them as a surface. Zooming User Interfaces An early research prototype using a zooming ap- proach was Pad and its successsor Pad++, both developed in Maryland 4. It has been used in various applications and also as a web browser capable of show- ing the viewed web pages and their link-structure from a birds view. In a study 3 For more information on Semantic Desktop systems in general, see http:// semanticdesktop.org 4 see http://www.cs.umd.edu/hcil/pad++/ where participants had to perform browsing tasks in order to answer some ques- tions, subjects using Pad++ were 23% faster than those using Netscape [8]. This shows that using large zoomable information surfaces are well-suited hypertext front-ends. The work on Pad++ has later yielded its successors “Jazz” and ﬁnally “Piccolo”, a toolkit that supports the development of 2D structured graphics programs, in general, and Zoomable User Interfaces, in particular Piccolo 5. A Semantic Desktop system whos UI is deeply based on zooming is Men- talSky 6. It uses machine-learning methods to semantically classify existing re- sources into clusters that can be browsed by zooming through and restructured with drag-and-drop interaction. MentalSky is currently in a prototype state of development. It strongly diﬀers from an iMapping based semantic wiki in the respect, that it is constraint to managing external resources (like ﬁles, pictures, web-links, etc.) but is not made for authoring content neither in plain text nor in a formal way. Levels Of Detail Hide & Progressive Disclosure Focus & Context iMapping Design Principles Visual Information Seeking Mantra • overview !rst • zoom and !lter • details on demand 7 Tasks of Information Visualisation details\"on\"demand overview zoom !lter relate history extract iMapping iMappping Related Work Mapping Techniques Mind!Maps Concept Maps Spatial Hypertext Knowledge Maps other methods ... Literature Designing the User Interface The Eyes Have It: Beyond the Plane Usability Heuristics Zoomable User Interfaces Tools Using Vision to Think CS-TR-3665 July 1996 ISR-TR-96-66 The Eyes Have It: A Task by Data Type Taxonomy for Information Visualizations Ben Shneiderman Department of Computer Science Human-Computer Interaction Laboratory, and Institute for Systems Research University of Maryland, College Park, Maryland 20742 USA ben@cs.umd.edu, http://www/cs.umd.edu/projects/hcil/ Abstract A useful starting point for designing advanced graphical user interfaces is the Visual Information- Seeking Mantra: Overview first, zoom and filter, then details-on-demand. But this is only a starting point in trying to understand the rich and varied set of information visualizations that have been proposed in recent years. This paper offers a task by data type taxonomy with seven data types (1-, 2-, 3-dimensional data, temporal and multi-dimensional data, and tree and network data) and seven tasks (overview, zoom, filter, details-on-demand, relate, history, and extract). !\"#$%!&$ !\"#$%&$'&(%$#%$)$*&)(+,$-)(&.%/01.(2.0*3)(/4(&$'&(/%(/&.$%(5$,+- +*&$%2/**$2&$,(6\"(%$7-&+/*)8(&\"#+2-77\"(*-9+1-&+/*-7(7+*3):(;.$ )+5+7-%+&\"(&/(3*/<7$,1$(%$#%$)$*&-&+/*)()02.(-)(4%-5$)(-*, )$5-*&+2(*$&)(.-)(7$,(&/(502.($44/%&(+*(0)+*1(.\"#$%&$'&()\")&$5)(4/% 3*/<7$,1$(%$#%$)$*&-&+/*(-*,($'&$*,+*1(.\"#$%&$'&()\")&$5)(&/ 5-3$(&.$5(-67$(&/($'#%$))(5/%$:(;.+)(</%3(.-)(5$&(<+&.(7+5+&$, )022$))(,0$(&/(,+44+207&+$)(+*270,+*1(&.$(&-2+&(-*,()+&0-&$,(*-&0%$(/4 502.(3*/<7$,1$:(=*)&$-,(/4(9+$<+*1(3*/<7$,1$($'#%$))+/*(-)(-* -77(-&(/*2$($9$*&8(<$(9+$<(+&(-)(-(2/*)&%02&+9$(#%/2$))8(+:$: 3*/<7$,1$(60+7,+*1:(;.$(>+)0-7(?*/<7$,1$(@0+7,$%(A>?@B(7$&) 0)$%)($'#%$))(2/*&$*&(9+-(9+)0-7(/%(&$'&0-7(5$-*)(-*,(7-&$% 4/%5-7+C$(&.-&(2/*&$*&(+*(&.$(4/%5(/4(-&&%+60&$)8(9-70$)8(&\"#$)8(-*, %$7-&+/*):(>?@(#%/-2&+9$7\"()0##/%&)(&.+)(#%/2$))(&.%/01.(-()$&(/4 )011$)&+/*(-1$*&)(<./)$(+*&$%-2&+/*(<+&.(&.$(0)$%(+)(5$,+-&$,(6\" &.$()011$)&+/*(5-*-1$%:(D%$7+5+*-%\"($9-70-&+/*(/4(&.$()011$)&+/* 5-*-1$%(-*,()011$)&+/*(-1$*&)(\"+$7,)(#/)+&+9$(%$)07&)(60&(40%&.$% 2/*4+%5)(&.-&(&.$%$(+)(*/(E)+79$%(6077$&F(4/%(3*/<7$,1$($*1+*$$%+*1 GG()$5-*&+2($'#%$))+/*(+)(5/)&(7+3$7\"(&/(.-##$*(,0%+*18(-*,(+) ,%+9$*(6\"8(&-)3(#$%4/%5-*2$: &'()*+,-)./'01/#234)5(/6).5,-7(+,. !:H:I(J809+,:'(-+0/80(),9'5)./'01/;,).)0('(-+0KL(!\"#$%&$'&M !\"#$%5$,+-(G(!\"#$%&'#&(\"')*+()'\"+%))(') <)0),'=/$),:. N$)+1*8(!05-*(O-2&/%) >)?@+,1. )#-&+-7(.\"#$%&$'&8()011$)&+/*G6-)$,(+*&$%4-2$)8(5+'$,G+*+&+-&+9$ ,+-7/1)8(9+)0-7(7-*10-1$8()#-&+-7(#-%)$%8(+*2%$5$*&-7(4/%5-7+C-&+/* AB//CD;E%$EF$/!G6/>GHIJE6<E/ %E;%E#EG$!$8HG !\"#$%&$'&(.-)(7/*1(6$$*(%$2/1*+C$,(-)(-(4/%5(/4(3*/<7$,1$ %$#%$)$*&-&+/*($5#.-)+C+*1(+*&$%,/205$*&(%$7-&+/*):(=*(-,,+&+/*(&/ 5/%$(2/55/*(#-1$G)+C$,(*/,$)(4/0*,(+*()\")&$5)(7+3$(?PQ(JRK -*,(&.$(S$68(-(*056$%(/4()\")&$5)(.-9$(+*270,$,()5-77$%G)+C$, +*4/%5-&+/*(2.0*3)(&/(%$#%$)$*&(4+*$%G1%-+*$,(%$7-&+/*):(T-%7\" $'-5#7$)(+*270,$(&.$(%$#%$)$*&-&+/*(/4(Q$-%7$U)(V.+*$)$(W//5 -%105$*&(+*(T027+,(JXYK8(;/075+*G)&%02&0%$,(-*-7\")$)(+* Z/&$V-%,)(JR[K8(-*,(=@=QG6-)$,(,$)+1*(%-&+/*-7$(+*(P+3%/#7+)(J\\\\K -*,(1=@=Q(JIK: ;.+)(4+%)&(%/0*,(/4(%$#%$)$*&-&+/*-7(.\"#$%&$'&(.$7#$,(5/&+9-&$(&.$ , $ ) + 1 * ( / 4 ( - ( * 0 5 6 $ % ( / 4 ( ) \" ) & $ 5 ) ( < + & . ( 5 / % $ ( $ ' # % $ ) ) + 9 $ %$#%$)$*&-&+/*):(=NT(JRHK($'&$*,$,(Z/&$V-%,)(&/(+*270,$(- &',-.!&'+#!\"/(4/%(,$4+*+*1(&\"#$)(&.%/01.(&.$(+*.$%+&-*2$(/4 -&&%+60&$)(-*,(6$.-9+/%(<+&.+*(&.$(2/*&$'&(/4(+*)&%02&+/*-7(,$)+1*: QDW=Z;(JXK8(<+&.(-*(-+5(&/($*.-*2+*1(60)+*$))(#%-2&+2$8(0)$, Q5-77;-73(5$&./,)(-&&-2.$,(&/(-(4%-5$G6-)$,(%$#%$)$*&-&+/*(&/ +*&$1%-&$(.\"#$%5$,+-8()$5-*&+2(*$&</%38(-*,($'#$%&()\")&$5 %$#%$)$*&-&+/*):(V/*2/%,$(JRRK()0##/%&$,(3*/<7$,1$($*1+*$$%+*1 &.%/01.(-(%$#%$)$*&-&+/*(+*(<.+2.(%$7-&+/*)(6$&<$$*(*/,$)(2/07, 6$(2/*)&%-+*$,:(?*/<7$,1$()&%02&0%+*1(<-)(&.$(1/-7(/4(]^0-*$& JR_K8(<.+2.(-77/<$,(0)$%)(&/(,$4+*$(%$#%$)$*&-&+/*-7()2.$5-)(&.-& +*270,$,(/6`$2&(-*,(%$7-&+/*(&\"#$)8(-&&%+60&$)8(-*,(2/*)&%-+*&):(;.$ -6/9$(%$#%$)$*&-&+/*)($5#.-)+C$(&.$($'#%$))+/*(/4(,$27-%-&+9$ 3*/<7$,1$:(D.+,+-)(J\\XK($56$,,$,(#%/2$,0%-7(3*/<7$,1$(+*(&.$ .\"#$%&$'&(%$#%$)$*&-&+/*8()02.(-)(+*4$%$*2$)(6-)$,(/*(4/%<-%,G 2.-+*+*18(6\"(-77/<+*1(*/,$)(+*(+&)(.\"#$%6-)$(&/(2/*&-+*(-()&/%$, ^0$%\":(]77(/4(&.$)$()\")&$5)(67$*,$,(%$#%$)$*&-&+/*)(4%/5 .\"#$%&$'&(-*,(-%&+4+2+-7(+*&$77+1$*2$:(O0%&.$%(,+)20))+/*)(/4(&.$ ,$)+1*(-*,(0)$(/4()02.()\")&$5)(-%$(4/0*,(+*(JRaK8(JXRK8(-*,(J\\HK: S/%3(/*(3*/<7$,1$G6-)$,(.\"#$%&$'&(6$2-5$(7$))(2/55/*(<+&. &.$($5$%1$*2$(/4(&.$(S$6:(b*$(%$-)/*(+)(&.-&(&.$(S$6U)(#%+5-%\" %$#%$)$*&-&+/*)8($:1:(!;Pc8(,+,(*/&(+*270,$(0)$407(4-2+7+&+$)(4/% 5/%$(4/%5-7(%$#%$)$*&-&+/*:(P/%$(%$2$*&()&-*,-%,)(.-9$(2.-*1$, &.-&:(=*,$$,8(5-*\"(/4(&.$(-6/9$(&.$5$)(-%$(6$+*1(%$9+)+&$,(+* ,+)20))+/*)(/4(&.$(EQ$5-*&+2(S$6:F(dPc(+*270,$)(5-*\"(/4(&.$ 2.-%-2&$%+)&+2)(/4($-%7+$%($44/%&)(<+&.(%$1-%,)(&/(+*&$1%-&+*1(4%-5$G 6 - ) $ , ( % $ # % $ ) $ * & - & + / * ) ( - * , ( . \" # $ % & $ ' & : ( c + 3 $ ( ] ^ 0 - * $ & U) %$#%$)$*&-&+/*8(+&(+)(-(5$&-G7-*10-1$(&.-&(2-*(6$(0)$,(&/($*2/,$ )#$2+4+2(3*/<7$,1$(%$#%$)$*&-&+/*(7-*10-1$):(;.$(W$)/0%2$ N$)2%+#&+/*(O%-5$</%3(AWNOB(-*,(N]Pceb=c(4/77/<(&.$ 3*/<7$,1$(+*&$%2.-*1$(4/%5-&(A?=OB(-*,(3*/<7$,1$(^0$%\"(-*, 5-*+#07-&+/*(7-*10-1$(A?fPcB(-)()&-*,-%,)(4/%().-%+*1(2/55/* #%/2$,0%-7(%$#%$)$*&-&+/*)(/4(3*/<7$,1$: ;.$)$(-%$(-77(%$#%$)$*&-&+/*)(,$)+1*$,(&/(-+,(+*(&.$(0)$(-*,().-%+*1 /4(3*/<7$,1$(/*2$(+&(+)(%$#%$)$*&$,8(60&(./<(&.$(3*/<7$,1$(+) E-0&./%$,F(+*(&.$(4+%)&(#7-2$(+)(*/&(2/*)+,$%$,:(bg0*$(RRGRH8(\\hh\\8(V/77$1$(D-%38(P-%\"7-*,8(iQ]:( V/#\"%+1.&(\\hh\\(]VP(RGH[RRXGIYYGhMh\\Mhhha:::jH:hh:( 25 !\"#$%!&$ !\"#$%&$'&(%$#%$)$*&)(+,$-)(&.%/01.(2.0*3)(/4(&$'&(/%(/&.$%(5$,+- +*&$%2/**$2&$,(6\"(%$7-&+/*)8(&\"#+2-77\"(*-9+1-&+/*-7(7+*3):(;.$ )+5+7-%+&\"(&/(3*/<7$,1$(%$#%$)$*&-&+/*)()02.(-)(4%-5$)(-*, )$5-*&+2(*$&)(.-)(7$,(&/(502.($44/%&(+*(0)+*1(.\"#$%&$'&()\")&$5)(4/% 3*/<7$,1$(%$#%$)$*&-&+/*(-*,($'&$*,+*1(.\"#$%&$'&()\")&$5)(&/ 5-3$(&.$5(-67$(&/($'#%$))(5/%$:(;.+)(</%3(.-)(5$&(<+&.(7+5+&$, )022$))(,0$(&/(,+44+207&+$)(+*270,+*1(&.$(&-2+&(-*,()+&0-&$,(*-&0%$(/4 502.(3*/<7$,1$:(=*)&$-,(/4(9+$<+*1(3*/<7$,1$($'#%$))+/*(-)(-* -77(-&(/*2$($9$*&8(<$(9+$<(+&(-)(-(2/*)&%02&+9$(#%/2$))8(+:$: 3*/<7$,1$(60+7,+*1:(;.$(>+)0-7(?*/<7$,1$(@0+7,$%(A>?@B(7$&) 0)$%)($'#%$))(2/*&$*&(9+-(9+)0-7(/%(&$'&0-7(5$-*)(-*,(7-&$% 4/%5-7+C$(&.-&(2/*&$*&(+*(&.$(4/%5(/4(-&&%+60&$)8(9-70$)8(&\"#$)8(-*, %$7-&+/*):(>?@(#%/-2&+9$7\"()0##/%&)(&.+)(#%/2$))(&.%/01.(-()$&(/4 )011$)&+/*(-1$*&)(<./)$(+*&$%-2&+/*(<+&.(&.$(0)$%(+)(5$,+-&$,(6\" &.$()011$)&+/*(5-*-1$%:(D%$7+5+*-%\"($9-70-&+/*(/4(&.$()011$)&+/* 5-*-1$%(-*,()011$)&+/*(-1$*&)(\"+$7,)(#/)+&+9$(%$)07&)(60&(40%&.$% 2/*4+%5)(&.-&(&.$%$(+)(*/(E)+79$%(6077$&F(4/%(3*/<7$,1$($*1+*$$%+*1 GG()$5-*&+2($'#%$))+/*(+)(5/)&(7+3$7\"(&/(.-##$*(,0%+*18(-*,(+) ,%+9$*(6\"8(&-)3(#$%4/%5-*2$: &'()*+,-)./'01/#234)5(/6).5,-7(+,. !:H:I(J809+,:'(-+0/80(),9'5)./'01/;,).)0('(-+0KL(!\"#$%&$'&M !\"#$%5$,+-(G(!\"#$%&'#&(\"')*+()'\"+%))(') <)0),'=/$),:. N$)+1*8(!05-*(O-2&/%) >)?@+,1. )#-&+-7(.\"#$%&$'&8()011$)&+/*G6-)$,(+*&$%4-2$)8(5+'$,G+*+&+-&+9$ ,+-7/1)8(9+)0-7(7-*10-1$8()#-&+-7(#-%)$%8(+*2%$5$*&-7(4/%5-7+C-&+/* AB//CD;E%$EF$/!G6/>GHIJE6<E/ %E;%E#EG$!$8HG !\"#$%&$'&(.-)(7/*1(6$$*(%$2/1*+C$,(-)(-(4/%5(/4(3*/<7$,1$ %$#%$)$*&-&+/*($5#.-)+C+*1(+*&$%,/205$*&(%$7-&+/*):(=*(-,,+&+/*(&/ 5/%$(2/55/*(#-1$G)+C$,(*/,$)(4/0*,(+*()\")&$5)(7+3$(?PQ(JRK -*,(&.$(S$68(-(*056$%(/4()\")&$5)(.-9$(+*270,$,()5-77$%G)+C$, +*4/%5-&+/*(2.0*3)(&/(%$#%$)$*&(4+*$%G1%-+*$,(%$7-&+/*):(T-%7\" $'-5#7$)(+*270,$(&.$(%$#%$)$*&-&+/*(/4(Q$-%7$U)(V.+*$)$(W//5 -%105$*&(+*(T027+,(JXYK8(;/075+*G)&%02&0%$,(-*-7\")$)(+* Z/&$V-%,)(JR[K8(-*,(=@=QG6-)$,(,$)+1*(%-&+/*-7$(+*(P+3%/#7+)(J\\\\K -*,(1=@=Q(JIK: ;.+)(4+%)&(%/0*,(/4(%$#%$)$*&-&+/*-7(.\"#$%&$'&(.$7#$,(5/&+9-&$(&.$ , $ ) + 1 * ( / 4 ( - ( * 0 5 6 $ % ( / 4 ( ) \" ) & $ 5 ) ( < + & . ( 5 / % $ ( $ ' # % $ ) ) + 9 $ %$#%$)$*&-&+/*):(=NT(JRHK($'&$*,$,(Z/&$V-%,)(&/(+*270,$(- &',-.!&'+#!\"/(4/%(,$4+*+*1(&\"#$)(&.%/01.(&.$(+*.$%+&-*2$(/4 -&&%+60&$)(-*,(6$.-9+/%(<+&.+*(&.$(2/*&$'&(/4(+*)&%02&+/*-7(,$)+1*: QDW=Z;(JXK8(<+&.(-*(-+5(&/($*.-*2+*1(60)+*$))(#%-2&+2$8(0)$, Q5-77;-73(5$&./,)(-&&-2.$,(&/(-(4%-5$G6-)$,(%$#%$)$*&-&+/*(&/ +*&$1%-&$(.\"#$%5$,+-8()$5-*&+2(*$&</%38(-*,($'#$%&()\")&$5 %$#%$)$*&-&+/*):(V/*2/%,$(JRRK()0##/%&$,(3*/<7$,1$($*1+*$$%+*1 &.%/01.(-(%$#%$)$*&-&+/*(+*(<.+2.(%$7-&+/*)(6$&<$$*(*/,$)(2/07, 6$(2/*)&%-+*$,:(?*/<7$,1$()&%02&0%+*1(<-)(&.$(1/-7(/4(]^0-*$& JR_K8(<.+2.(-77/<$,(0)$%)(&/(,$4+*$(%$#%$)$*&-&+/*-7()2.$5-)(&.-& +*270,$,(/6`$2&(-*,(%$7-&+/*(&\"#$)8(-&&%+60&$)8(-*,(2/*)&%-+*&):(;.$ -6/9$(%$#%$)$*&-&+/*)($5#.-)+C$(&.$($'#%$))+/*(/4(,$27-%-&+9$ 3*/<7$,1$:(D.+,+-)(J\\XK($56$,,$,(#%/2$,0%-7(3*/<7$,1$(+*(&.$ .\"#$%&$'&(%$#%$)$*&-&+/*8()02.(-)(+*4$%$*2$)(6-)$,(/*(4/%<-%,G 2.-+*+*18(6\"(-77/<+*1(*/,$)(+*(+&)(.\"#$%6-)$(&/(2/*&-+*(-()&/%$, ^0$%\":(]77(/4(&.$)$()\")&$5)(67$*,$,(%$#%$)$*&-&+/*)(4%/5 .\"#$%&$'&(-*,(-%&+4+2+-7(+*&$77+1$*2$:(O0%&.$%(,+)20))+/*)(/4(&.$ ,$)+1*(-*,(0)$(/4()02.()\")&$5)(-%$(4/0*,(+*(JRaK8(JXRK8(-*,(J\\HK: S/%3(/*(3*/<7$,1$G6-)$,(.\"#$%&$'&(6$2-5$(7$))(2/55/*(<+&. &.$($5$%1$*2$(/4(&.$(S$6:(b*$(%$-)/*(+)(&.-&(&.$(S$6U)(#%+5-%\" %$#%$)$*&-&+/*)8($:1:(!;Pc8(,+,(*/&(+*270,$(0)$407(4-2+7+&+$)(4/% 5/%$(4/%5-7(%$#%$)$*&-&+/*:(P/%$(%$2$*&()&-*,-%,)(.-9$(2.-*1$, &.-&:(=*,$$,8(5-*\"(/4(&.$(-6/9$(&.$5$)(-%$(6$+*1(%$9+)+&$,(+* ,+)20))+/*)(/4(&.$(EQ$5-*&+2(S$6:F(dPc(+*270,$)(5-*\"(/4(&.$ 2.-%-2&$%+)&+2)(/4($-%7+$%($44/%&)(<+&.(%$1-%,)(&/(+*&$1%-&+*1(4%-5$G 6 - ) $ , ( % $ # % $ ) $ * & - & + / * ) ( - * , ( . \" # $ % & $ ' & : ( c + 3 $ ( ] ^ 0 - * $ & U) %$#%$)$*&-&+/*8(+&(+)(-(5$&-G7-*10-1$(&.-&(2-*(6$(0)$,(&/($*2/,$ )#$2+4+2(3*/<7$,1$(%$#%$)$*&-&+/*(7-*10-1$):(;.$(W$)/0%2$ N$)2%+#&+/*(O%-5$</%3(AWNOB(-*,(N]Pceb=c(4/77/<(&.$ 3*/<7$,1$(+*&$%2.-*1$(4/%5-&(A?=OB(-*,(3*/<7$,1$(^0$%\"(-*, 5-*+#07-&+/*(7-*10-1$(A?fPcB(-)()&-*,-%,)(4/%().-%+*1(2/55/* #%/2$,0%-7(%$#%$)$*&-&+/*)(/4(3*/<7$,1$: ;.$)$(-%$(-77(%$#%$)$*&-&+/*)(,$)+1*$,(&/(-+,(+*(&.$(0)$(-*,().-%+*1 /4(3*/<7$,1$(/*2$(+&(+)(%$#%$)$*&$,8(60&(./<(&.$(3*/<7$,1$(+) E-0&./%$,F(+*(&.$(4+%)&(#7-2$(+)(*/&(2/*)+,$%$,:(bg0*$(RRGRH8(\\hh\\8(V/77$1$(D-%38(P-%\"7-*,8(iQ]:( V/#\"%+1.&(\\hh\\(]VP(RGH[RRXGIYYGhMh\\Mhhha:::jH:hh:( 25 Toolkit Design for Interactive Structured Graphics Benjamin B. Bederson, Jesse Grosjean, and Jon Meyer Abstract—In this paper, we analyze toolkit designs for building graphical applications with rich user interfaces, comparing polylithic and monolithic toolkit-based solutions. Polylithic toolkits encourage extension by composition and follow a design philosophy similar to 3D scene graphs supported by toolkits including Java3D and OpenInventor. Monolithic toolkits, on the other hand, encourage extension by inheritance, and are more akin to 2D Graphical User Interface toolkits such as Swing or MFC. We describe Jazz (a polylithic toolkit) and Piccolo (a monolithic toolkit), each of which we built to support interactive 2D structured graphics applications in general, and Zoomable User Interface applications in particular. We examine the trade offs of each approach in terms of performance, memory requirements, and programmability. We conclude that a polylithic approach is most suitable for toolkit builders, visual design software where code is automatically generated, and application builders where there is much customization of the toolkit. Correspondingly, we find that monolithic approaches appear to be best for application builders where there is not much customization of the toolkit. Index Terms—Monolithic toolkits, polylithic toolkits, object-oriented design, composition, inheritance, Zoomable User Interfaces (ZUIs), animation, structured graphics, Graphical User Interfaces (GUIs), Pad++, Jazz, Piccolo. ! 1 INTRODUCTION A PPLICATION developers rely on User Interface (UI) toolkits such as Microsoft’s MFC and .NET Windows Forms, and Sun’s Swing and AWT to create visual user interfaces. However, while these toolkits are effective for traditional widget-based applications, they fall short when the developer needs to build a new kind of user interface component-one that is not bundled with the toolkit. These components might be simple widgets, such as a range slider or more complex objects, including interactive graphs and charts, sophisticated data displays, timeline editors, zoom- able user interfaces, or fisheye visualizations. Developing application-specific components usually requires significant quantities of custom code to manage a range of features, many of which are similar from one component to the next. These include managing which areas of the window need repainting (called region manage- ment), repainting those regions efficiently, sending events to the internal object that is under the mouse pointer, managing multiple views, and integrating with the under- lying windowing system. Writing this code is cumbersome, yet most standard 2D UI toolkits provide only rudimentary support for creating custom components—typically, just a set of methods for drawing 2D shapes and methods for listening to low-level events. Some toolkits such as Tcl/Tk [19] include a “structured canvas” component, which supports basic structured graphics. These canvases typically contain a collection of graphical 2D objects, including shapes, text, and images. These components could in principal be used to create application-specific components. However, structured can- vases are designed primarily to display graphical data, not to support new kinds of interaction components. Thus, for example, they usually do not allow the application to extend the set of objects that can be placed within the canvas. We have found that many developers bypass these structured canvas components and follow a “roll-your- own” design philosophy, rewriting large quantities of code and increasing engineering overhead, particularly in terms of reliability and programmability. There are also commer- cial toolkits available such as Flash [6] and Adobe SVG Viewer [2]. But, these approaches are often difficult to extend and integrate into an application. We believe future user interface toolkits must address these problems by providing higher-level libraries for supporting custom interface components. However, there is still an open question regarding which design philosophy to adopt for these higher-level toolkits. The core issue we address here is whether toolkits should be designed so that the inevitable complexity and extension of the components are supported primarily through composition (which we call polylithic) or inheritance (which we call monolithic). In this paper, we consider these two design approaches for interactive structured graphics toolkits through two toolkits we built: Jazz, 1 a polylithic toolkit; and Piccolo,2 a IEEE TRANSACTIONS ON SOFTWARE ENGINEERING, VOL. 30, NO. 8, AUGUST 2004 1 . The authors are with the Human-Computer Interaction Laboratory, Institute for Advanced Computer Studies, Computer Science Department, University of Maryland, College Park, MD 20742. E-mail: {bederson, jesse, meyer}@cs.umd.edu. Manuscript received 16 Sept. 2003; accepted 16 Mar. 2004. Recommended for acceptance by D. Weiss. For information on obtaining reprints of this article, please send e-mail to: tse@computer.org, and reference IEEECS Log Number TSE-0145-0903. 1. The name Jazz is not an acronym, but rather is motivated by the music-related naming conventions that the Java Swing toolkit started. In addition, the letter “J” signifies the Java connection, and the letter “Z” signifies the zooming connection. Jazz is open source software according to the Mozilla Public License, and is available at: http://www.cs.umd.edu/ hcil/jazz. 2. The name Piccolo is motivated by the music connection of Jazz and Swing, and because it is so small (approximately one tenth the size of Jazz). Piccolo is open source software according to the Mozilla Public License, and is available at: http://www.cs.umd.edu/hcil/piccolo. 0098-5589/04/$20.00 ! 2004 IEEE Published by the IEEE Computer Society Mouse House Dog Cat DaddyMum Charly Farm Farmer Bulldozer Horse Spider Pig Ofﬁce Computer Printer Papers Boss Buildings Stable search-ﬁlter Type: Animal Mouse Dog Cat Horse Spider iMapping Search iMapping Examples superordinate Node new Text... when [enter] is pressed while editing a node, editing is anded and a Textcursor is set to the position below the node - where a new paragraph would start. entering text Fig. 1. An example iMap showing three expanded text pages and several sub-maps with collapsed items. 5 see http://www.cs.umd.edu/hcil/piccolo/ 6 see http://mentalsky.net/ and http://cognitivetools.net/tiki-index.php? page=MentalSky 3 Design iMapping tries to combine the advantages of all the above approaches: – basic wiki functionality (collaborative editing, easy linking, backlinks etc.) – visual knowledge representations with structural analogy to content – easy hierarchical overall topology – facility for graph-based relation mapping – support for formal semantic statements – allowing constructive ambiguity – provide overview by integrating context and detail through zooming Basic Hierarchy The basis of the iMapping paradigm is a large two-dimen- sional surface, where items can be freely placed. In a wiki context, these items mainly correspond to wiki pages. Because these items can contain other items, it is encouraged to use microcontent rather than long unstructured texts. Whereas in Mind-Maps or other tree-like diagrams the lower hierarchies branch towards the outside from a central point, in an iMap hierarchy goes down into deeply nested nodes that can be zoomed into (see Figure 1). Like explained above, there can be multiple visual instances of one and the same information object, because it may be relevant in diﬀerent contexts. Other Content Instead of a wiki (text-) page, a node could also contain things like a picture or other structured objects. It can basically be seen as an inline link to any resource for which a display method is known. Even inter-wiki or other remote content could be included inline like that. Levels of Detail Because some information objects (like most text-pages) are rather hard to recognise when they are scaled down to thumbnail size, the nodes should have at least two possible states: open and closed, which could also be seen as expanded / collapsed or being outside / inside the node. Switching between these states is done either manually per click or can take place automatically, depending on how large the object is displayed. This method is also sometimes referred to as “semantic zooming”. A wiki page could be represented by its name in collapsed state and with its content in expanded mode. A more structured article could show his title only from a distance, when zoomed larger also some additional information like authors and date and when zoomed to reasonable size, fade over to the full content. Structuring content in the ABCDE format 7, facilitates such semantic zooming. 7 see http://wiki.ontoworld.org/wiki/ABCDEF Link Structure On the one hand, giving an overview to the structure and relations between information items is one of the main beneﬁts of the iMapping approach. On the other hand, just drawing arrows for every link or even every semantic relation and backlinks to any other item would result in a complete mess sometimes referred to as the “spaghetti syndrome”. The idea in iMapping is, to not show any relations by default, and only make them visible on demand (see Figure 2). This could be a subtle interaction like mouse-over or something more explicitdepending on user settings or a mode. Not only naming or even typing links but graphically drawing them between objects in a concept map (node-and-link) style would go even further beyond common wiki functionality. However it is a common and well-evaluated technique that is useful for depicting and authoring relations between information items. Such links have of course to stay permanently visible. In the same way, it is possible to semantically interrelate items by simply drawing links between them, which can than be typed. If this is done using auto-completion, reuse of existing relation types is fostered. Levels Of Detail Hide & Progressive Disclosure Focus & Context iMapping Design Principles Visual Information Seeking Mantra • overview !rst • zoom and !lter • details on demand 7 Tasks of Information Visualisation details\"on\"demand overview zoom !lter relate history extract iMapping iMappping Related Work Mapping Techniques Mind!Maps Concept Maps Spatial Hypertext Knowledge Maps other methods ... Literature Designing the User Interface The Eyes Have It: Beyond the Plane Usability Heuristics Zoomable User Interfaces Tools Using Vision to Think CS-TR-3665 July 1996 ISR-TR-96-66 The Eyes Have It: A Task by Data Type Taxonomy for Information Visualizations Ben Shneiderman Department of Computer Science Human-Computer Interaction Laboratory, and Institute for Systems Research University of Maryland, College Park, Maryland 20742 USA ben@cs.umd.edu, http://www/cs.umd.edu/projects/hcil/ Abstract A useful starting point for designing advanced graphical user interfaces is the Visual Information- Seeking Mantra: Overview first, zoom and filter, then details-on-demand. But this is only a starting point in trying to understand the rich and varied set of information visualizations that have been proposed in recent years. This paper offers a task by data type taxonomy with seven data types (1-, 2-, 3-dimensional data, temporal and multi-dimensional data, and tree and network data) and seven tasks (overview, zoom, filter, details-on-demand, relate, history, and extract). !\"#$%!&$ !\"#$%&$'&(%$#%$)$*&)(+,$-)(&.%/01.(2.0*3)(/4(&$'&(/%(/&.$%(5$,+- +*&$%2/**$2&$,(6\"(%$7-&+/*)8(&\"#+2-77\"(*-9+1-&+/*-7(7+*3):(;.$ )+5+7-%+&\"(&/(3*/<7$,1$(%$#%$)$*&-&+/*)()02.(-)(4%-5$)(-*, )$5-*&+2(*$&)(.-)(7$,(&/(502.($44/%&(+*(0)+*1(.\"#$%&$'&()\")&$5)(4/% 3*/<7$,1$(%$#%$)$*&-&+/*(-*,($'&$*,+*1(.\"#$%&$'&()\")&$5)(&/ 5-3$(&.$5(-67$(&/($'#%$))(5/%$:(;.+)(</%3(.-)(5$&(<+&.(7+5+&$, )022$))(,0$(&/(,+44+207&+$)(+*270,+*1(&.$(&-2+&(-*,()+&0-&$,(*-&0%$(/4 502.(3*/<7$,1$:(=*)&$-,(/4(9+$<+*1(3*/<7$,1$($'#%$))+/*(-)(-* -77(-&(/*2$($9$*&8(<$(9+$<(+&(-)(-(2/*)&%02&+9$(#%/2$))8(+:$: 3*/<7$,1$(60+7,+*1:(;.$(>+)0-7(?*/<7$,1$(@0+7,$%(A>?@B(7$&) 0)$%)($'#%$))(2/*&$*&(9+-(9+)0-7(/%(&$'&0-7(5$-*)(-*,(7-&$% 4/%5-7+C$(&.-&(2/*&$*&(+*(&.$(4/%5(/4(-&&%+60&$)8(9-70$)8(&\"#$)8(-*, %$7-&+/*):(>?@(#%/-2&+9$7\"()0##/%&)(&.+)(#%/2$))(&.%/01.(-()$&(/4 )011$)&+/*(-1$*&)(<./)$(+*&$%-2&+/*(<+&.(&.$(0)$%(+)(5$,+-&$,(6\" &.$()011$)&+/*(5-*-1$%:(D%$7+5+*-%\"($9-70-&+/*(/4(&.$()011$)&+/* 5-*-1$%(-*,()011$)&+/*(-1$*&)(\"+$7,)(#/)+&+9$(%$)07&)(60&(40%&.$% 2/*4+%5)(&.-&(&.$%$(+)(*/(E)+79$%(6077$&F(4/%(3*/<7$,1$($*1+*$$%+*1 GG()$5-*&+2($'#%$))+/*(+)(5/)&(7+3$7\"(&/(.-##$*(,0%+*18(-*,(+) ,%+9$*(6\"8(&-)3(#$%4/%5-*2$: &'()*+,-)./'01/#234)5(/6).5,-7(+,. !:H:I(J809+,:'(-+0/80(),9'5)./'01/;,).)0('(-+0KL(!\"#$%&$'&M !\"#$%5$,+-(G(!\"#$%&'#&(\"')*+()'\"+%))(') <)0),'=/$),:. N$)+1*8(!05-*(O-2&/%) >)?@+,1. )#-&+-7(.\"#$%&$'&8()011$)&+/*G6-)$,(+*&$%4-2$)8(5+'$,G+*+&+-&+9$ ,+-7/1)8(9+)0-7(7-*10-1$8()#-&+-7(#-%)$%8(+*2%$5$*&-7(4/%5-7+C-&+/* AB//CD;E%$EF$/!G6/>GHIJE6<E/ %E;%E#EG$!$8HG !\"#$%&$'&(.-)(7/*1(6$$*(%$2/1*+C$,(-)(-(4/%5(/4(3*/<7$,1$ %$#%$)$*&-&+/*($5#.-)+C+*1(+*&$%,/205$*&(%$7-&+/*):(=*(-,,+&+/*(&/ 5/%$(2/55/*(#-1$G)+C$,(*/,$)(4/0*,(+*()\")&$5)(7+3$(?PQ(JRK -*,(&.$(S$68(-(*056$%(/4()\")&$5)(.-9$(+*270,$,()5-77$%G)+C$, +*4/%5-&+/*(2.0*3)(&/(%$#%$)$*&(4+*$%G1%-+*$,(%$7-&+/*):(T-%7\" $'-5#7$)(+*270,$(&.$(%$#%$)$*&-&+/*(/4(Q$-%7$U)(V.+*$)$(W//5 -%105$*&(+*(T027+,(JXYK8(;/075+*G)&%02&0%$,(-*-7\")$)(+* Z/&$V-%,)(JR[K8(-*,(=@=QG6-)$,(,$)+1*(%-&+/*-7$(+*(P+3%/#7+)(J\\\\K -*,(1=@=Q(JIK: ;.+)(4+%)&(%/0*,(/4(%$#%$)$*&-&+/*-7(.\"#$%&$'&(.$7#$,(5/&+9-&$(&.$ , $ ) + 1 * ( / 4 ( - ( * 0 5 6 $ % ( / 4 ( ) \" ) & $ 5 ) ( < + & . ( 5 / % $ ( $ ' # % $ ) ) + 9 $ %$#%$)$*&-&+/*):(=NT(JRHK($'&$*,$,(Z/&$V-%,)(&/(+*270,$(- &',-.!&'+#!\"/(4/%(,$4+*+*1(&\"#$)(&.%/01.(&.$(+*.$%+&-*2$(/4 -&&%+60&$)(-*,(6$.-9+/%(<+&.+*(&.$(2/*&$'&(/4(+*)&%02&+/*-7(,$)+1*: QDW=Z;(JXK8(<+&.(-*(-+5(&/($*.-*2+*1(60)+*$))(#%-2&+2$8(0)$, Q5-77;-73(5$&./,)(-&&-2.$,(&/(-(4%-5$G6-)$,(%$#%$)$*&-&+/*(&/ +*&$1%-&$(.\"#$%5$,+-8()$5-*&+2(*$&</%38(-*,($'#$%&()\")&$5 %$#%$)$*&-&+/*):(V/*2/%,$(JRRK()0##/%&$,(3*/<7$,1$($*1+*$$%+*1 &.%/01.(-(%$#%$)$*&-&+/*(+*(<.+2.(%$7-&+/*)(6$&<$$*(*/,$)(2/07, 6$(2/*)&%-+*$,:(?*/<7$,1$()&%02&0%+*1(<-)(&.$(1/-7(/4(]^0-*$& JR_K8(<.+2.(-77/<$,(0)$%)(&/(,$4+*$(%$#%$)$*&-&+/*-7()2.$5-)(&.-& +*270,$,(/6`$2&(-*,(%$7-&+/*(&\"#$)8(-&&%+60&$)8(-*,(2/*)&%-+*&):(;.$ -6/9$(%$#%$)$*&-&+/*)($5#.-)+C$(&.$($'#%$))+/*(/4(,$27-%-&+9$ 3*/<7$,1$:(D.+,+-)(J\\XK($56$,,$,(#%/2$,0%-7(3*/<7$,1$(+*(&.$ .\"#$%&$'&(%$#%$)$*&-&+/*8()02.(-)(+*4$%$*2$)(6-)$,(/*(4/%<-%,G 2.-+*+*18(6\"(-77/<+*1(*/,$)(+*(+&)(.\"#$%6-)$(&/(2/*&-+*(-()&/%$, ^0$%\":(]77(/4(&.$)$()\")&$5)(67$*,$,(%$#%$)$*&-&+/*)(4%/5 .\"#$%&$'&(-*,(-%&+4+2+-7(+*&$77+1$*2$:(O0%&.$%(,+)20))+/*)(/4(&.$ ,$)+1*(-*,(0)$(/4()02.()\")&$5)(-%$(4/0*,(+*(JRaK8(JXRK8(-*,(J\\HK: S/%3(/*(3*/<7$,1$G6-)$,(.\"#$%&$'&(6$2-5$(7$))(2/55/*(<+&. &.$($5$%1$*2$(/4(&.$(S$6:(b*$(%$-)/*(+)(&.-&(&.$(S$6U)(#%+5-%\" %$#%$)$*&-&+/*)8($:1:(!;Pc8(,+,(*/&(+*270,$(0)$407(4-2+7+&+$)(4/% 5/%$(4/%5-7(%$#%$)$*&-&+/*:(P/%$(%$2$*&()&-*,-%,)(.-9$(2.-*1$, &.-&:(=*,$$,8(5-*\"(/4(&.$(-6/9$(&.$5$)(-%$(6$+*1(%$9+)+&$,(+* ,+)20))+/*)(/4(&.$(EQ$5-*&+2(S$6:F(dPc(+*270,$)(5-*\"(/4(&.$ 2.-%-2&$%+)&+2)(/4($-%7+$%($44/%&)(<+&.(%$1-%,)(&/(+*&$1%-&+*1(4%-5$G 6 - ) $ , ( % $ # % $ ) $ * & - & + / * ) ( - * , ( . \" # $ % & $ ' & : ( c + 3 $ ( ] ^ 0 - * $ & U) %$#%$)$*&-&+/*8(+&(+)(-(5$&-G7-*10-1$(&.-&(2-*(6$(0)$,(&/($*2/,$ )#$2+4+2(3*/<7$,1$(%$#%$)$*&-&+/*(7-*10-1$):(;.$(W$)/0%2$ N$)2%+#&+/*(O%-5$</%3(AWNOB(-*,(N]Pceb=c(4/77/<(&.$ 3*/<7$,1$(+*&$%2.-*1$(4/%5-&(A?=OB(-*,(3*/<7$,1$(^0$%\"(-*, 5-*+#07-&+/*(7-*10-1$(A?fPcB(-)()&-*,-%,)(4/%().-%+*1(2/55/* #%/2$,0%-7(%$#%$)$*&-&+/*)(/4(3*/<7$,1$: ;.$)$(-%$(-77(%$#%$)$*&-&+/*)(,$)+1*$,(&/(-+,(+*(&.$(0)$(-*,().-%+*1 /4(3*/<7$,1$(/*2$(+&(+)(%$#%$)$*&$,8(60&(./<(&.$(3*/<7$,1$(+) E-0&./%$,F(+*(&.$(4+%)&(#7-2$(+)(*/&(2/*)+,$%$,:(bg0*$(RRGRH8(\\hh\\8(V/77$1$(D-%38(P-%\"7-*,8(iQ]:( V/#\"%+1.&(\\hh\\(]VP(RGH[RRXGIYYGhMh\\Mhhha:::jH:hh:( 25 !\"#$%!&$ !\"#$%&$'&(%$#%$)$*&)(+,$-)(&.%/01.(2.0*3)(/4(&$'&(/%(/&.$%(5$,+- +*&$%2/**$2&$,(6\"(%$7-&+/*)8(&\"#+2-77\"(*-9+1-&+/*-7(7+*3):(;.$ )+5+7-%+&\"(&/(3*/<7$,1$(%$#%$)$*&-&+/*)()02.(-)(4%-5$)(-*, )$5-*&+2(*$&)(.-)(7$,(&/(502.($44/%&(+*(0)+*1(.\"#$%&$'&()\")&$5)(4/% 3*/<7$,1$(%$#%$)$*&-&+/*(-*,($'&$*,+*1(.\"#$%&$'&()\")&$5)(&/ 5-3$(&.$5(-67$(&/($'#%$))(5/%$:(;.+)(</%3(.-)(5$&(<+&.(7+5+&$, )022$))(,0$(&/(,+44+207&+$)(+*270,+*1(&.$(&-2+&(-*,()+&0-&$,(*-&0%$(/4 502.(3*/<7$,1$:(=*)&$-,(/4(9+$<+*1(3*/<7$,1$($'#%$))+/*(-)(-* -77(-&(/*2$($9$*&8(<$(9+$<(+&(-)(-(2/*)&%02&+9$(#%/2$))8(+:$: 3*/<7$,1$(60+7,+*1:(;.$(>+)0-7(?*/<7$,1$(@0+7,$%(A>?@B(7$&) 0)$%)($'#%$))(2/*&$*&(9+-(9+)0-7(/%(&$'&0-7(5$-*)(-*,(7-&$% 4/%5-7+C$(&.-&(2/*&$*&(+*(&.$(4/%5(/4(-&&%+60&$)8(9-70$)8(&\"#$)8(-*, %$7-&+/*):(>?@(#%/-2&+9$7\"()0##/%&)(&.+)(#%/2$))(&.%/01.(-()$&(/4 )011$)&+/*(-1$*&)(<./)$(+*&$%-2&+/*(<+&.(&.$(0)$%(+)(5$,+-&$,(6\" &.$()011$)&+/*(5-*-1$%:(D%$7+5+*-%\"($9-70-&+/*(/4(&.$()011$)&+/* 5-*-1$%(-*,()011$)&+/*(-1$*&)(\"+$7,)(#/)+&+9$(%$)07&)(60&(40%&.$% 2/*4+%5)(&.-&(&.$%$(+)(*/(E)+79$%(6077$&F(4/%(3*/<7$,1$($*1+*$$%+*1 GG()$5-*&+2($'#%$))+/*(+)(5/)&(7+3$7\"(&/(.-##$*(,0%+*18(-*,(+) ,%+9$*(6\"8(&-)3(#$%4/%5-*2$: &'()*+,-)./'01/#234)5(/6).5,-7(+,. !:H:I(J809+,:'(-+0/80(),9'5)./'01/;,).)0('(-+0KL(!\"#$%&$'&M !\"#$%5$,+-(G(!\"#$%&'#&(\"')*+()'\"+%))(') <)0),'=/$),:. N$)+1*8(!05-*(O-2&/%) >)?@+,1. )#-&+-7(.\"#$%&$'&8()011$)&+/*G6-)$,(+*&$%4-2$)8(5+'$,G+*+&+-&+9$ ,+-7/1)8(9+)0-7(7-*10-1$8()#-&+-7(#-%)$%8(+*2%$5$*&-7(4/%5-7+C-&+/* AB//CD;E%$EF$/!G6/>GHIJE6<E/ %E;%E#EG$!$8HG !\"#$%&$'&(.-)(7/*1(6$$*(%$2/1*+C$,(-)(-(4/%5(/4(3*/<7$,1$ %$#%$)$*&-&+/*($5#.-)+C+*1(+*&$%,/205$*&(%$7-&+/*):(=*(-,,+&+/*(&/ 5/%$(2/55/*(#-1$G)+C$,(*/,$)(4/0*,(+*()\")&$5)(7+3$(?PQ(JRK -*,(&.$(S$68(-(*056$%(/4()\")&$5)(.-9$(+*270,$,()5-77$%G)+C$, +*4/%5-&+/*(2.0*3)(&/(%$#%$)$*&(4+*$%G1%-+*$,(%$7-&+/*):(T-%7\" $'-5#7$)(+*270,$(&.$(%$#%$)$*&-&+/*(/4(Q$-%7$U)(V.+*$)$(W//5 -%105$*&(+*(T027+,(JXYK8(;/075+*G)&%02&0%$,(-*-7\")$)(+* Z/&$V-%,)(JR[K8(-*,(=@=QG6-)$,(,$)+1*(%-&+/*-7$(+*(P+3%/#7+)(J\\\\K -*,(1=@=Q(JIK: ;.+)(4+%)&(%/0*,(/4(%$#%$)$*&-&+/*-7(.\"#$%&$'&(.$7#$,(5/&+9-&$(&.$ , $ ) + 1 * ( / 4 ( - ( * 0 5 6 $ % ( / 4 ( ) \" ) & $ 5 ) ( < + & . ( 5 / % $ ( $ ' # % $ ) ) + 9 $ %$#%$)$*&-&+/*):(=NT(JRHK($'&$*,$,(Z/&$V-%,)(&/(+*270,$(- &',-.!&'+#!\"/(4/%(,$4+*+*1(&\"#$)(&.%/01.(&.$(+*.$%+&-*2$(/4 -&&%+60&$)(-*,(6$.-9+/%(<+&.+*(&.$(2/*&$'&(/4(+*)&%02&+/*-7(,$)+1*: QDW=Z;(JXK8(<+&.(-*(-+5(&/($*.-*2+*1(60)+*$))(#%-2&+2$8(0)$, Q5-77;-73(5$&./,)(-&&-2.$,(&/(-(4%-5$G6-)$,(%$#%$)$*&-&+/*(&/ +*&$1%-&$(.\"#$%5$,+-8()$5-*&+2(*$&</%38(-*,($'#$%&()\")&$5 %$#%$)$*&-&+/*):(V/*2/%,$(JRRK()0##/%&$,(3*/<7$,1$($*1+*$$%+*1 &.%/01.(-(%$#%$)$*&-&+/*(+*(<.+2.(%$7-&+/*)(6$&<$$*(*/,$)(2/07, 6$(2/*)&%-+*$,:(?*/<7$,1$()&%02&0%+*1(<-)(&.$(1/-7(/4(]^0-*$& JR_K8(<.+2.(-77/<$,(0)$%)(&/(,$4+*$(%$#%$)$*&-&+/*-7()2.$5-)(&.-& +*270,$,(/6`$2&(-*,(%$7-&+/*(&\"#$)8(-&&%+60&$)8(-*,(2/*)&%-+*&):(;.$ -6/9$(%$#%$)$*&-&+/*)($5#.-)+C$(&.$($'#%$))+/*(/4(,$27-%-&+9$ 3*/<7$,1$:(D.+,+-)(J\\XK($56$,,$,(#%/2$,0%-7(3*/<7$,1$(+*(&.$ .\"#$%&$'&(%$#%$)$*&-&+/*8()02.(-)(+*4$%$*2$)(6-)$,(/*(4/%<-%,G 2.-+*+*18(6\"(-77/<+*1(*/,$)(+*(+&)(.\"#$%6-)$(&/(2/*&-+*(-()&/%$, ^0$%\":(]77(/4(&.$)$()\")&$5)(67$*,$,(%$#%$)$*&-&+/*)(4%/5 .\"#$%&$'&(-*,(-%&+4+2+-7(+*&$77+1$*2$:(O0%&.$%(,+)20))+/*)(/4(&.$ ,$)+1*(-*,(0)$(/4()02.()\")&$5)(-%$(4/0*,(+*(JRaK8(JXRK8(-*,(J\\HK: S/%3(/*(3*/<7$,1$G6-)$,(.\"#$%&$'&(6$2-5$(7$))(2/55/*(<+&. &.$($5$%1$*2$(/4(&.$(S$6:(b*$(%$-)/*(+)(&.-&(&.$(S$6U)(#%+5-%\" %$#%$)$*&-&+/*)8($:1:(!;Pc8(,+,(*/&(+*270,$(0)$407(4-2+7+&+$)(4/% 5/%$(4/%5-7(%$#%$)$*&-&+/*:(P/%$(%$2$*&()&-*,-%,)(.-9$(2.-*1$, &.-&:(=*,$$,8(5-*\"(/4(&.$(-6/9$(&.$5$)(-%$(6$+*1(%$9+)+&$,(+* ,+)20))+/*)(/4(&.$(EQ$5-*&+2(S$6:F(dPc(+*270,$)(5-*\"(/4(&.$ 2.-%-2&$%+)&+2)(/4($-%7+$%($44/%&)(<+&.(%$1-%,)(&/(+*&$1%-&+*1(4%-5$G 6 - ) $ , ( % $ # % $ ) $ * & - & + / * ) ( - * , ( . \" # $ % & $ ' & : ( c + 3 $ ( ] ^ 0 - * $ & U) %$#%$)$*&-&+/*8(+&(+)(-(5$&-G7-*10-1$(&.-&(2-*(6$(0)$,(&/($*2/,$ )#$2+4+2(3*/<7$,1$(%$#%$)$*&-&+/*(7-*10-1$):(;.$(W$)/0%2$ N$)2%+#&+/*(O%-5$</%3(AWNOB(-*,(N]Pceb=c(4/77/<(&.$ 3*/<7$,1$(+*&$%2.-*1$(4/%5-&(A?=OB(-*,(3*/<7$,1$(^0$%\"(-*, 5-*+#07-&+/*(7-*10-1$(A?fPcB(-)()&-*,-%,)(4/%().-%+*1(2/55/* #%/2$,0%-7(%$#%$)$*&-&+/*)(/4(3*/<7$,1$: ;.$)$(-%$(-77(%$#%$)$*&-&+/*)(,$)+1*$,(&/(-+,(+*(&.$(0)$(-*,().-%+*1 /4(3*/<7$,1$(/*2$(+&(+)(%$#%$)$*&$,8(60&(./<(&.$(3*/<7$,1$(+) E-0&./%$,F(+*(&.$(4+%)&(#7-2$(+)(*/&(2/*)+,$%$,:(bg0*$(RRGRH8(\\hh\\8(V/77$1$(D-%38(P-%\"7-*,8(iQ]:( V/#\"%+1.&(\\hh\\(]VP(RGH[RRXGIYYGhMh\\Mhhha:::jH:hh:( 25 Toolkit Design for Interactive Structured Graphics Benjamin B. Bederson, Jesse Grosjean, and Jon Meyer Abstract—In this paper, we analyze toolkit designs for building graphical applications with rich user interfaces, comparing polylithic and monolithic toolkit-based solutions. Polylithic toolkits encourage extension by composition and follow a design philosophy similar to 3D scene graphs supported by toolkits including Java3D and OpenInventor. Monolithic toolkits, on the other hand, encourage extension by inheritance, and are more akin to 2D Graphical User Interface toolkits such as Swing or MFC. We describe Jazz (a polylithic toolkit) and Piccolo (a monolithic toolkit), each of which we built to support interactive 2D structured graphics applications in general, and Zoomable User Interface applications in particular. We examine the trade offs of each approach in terms of performance, memory requirements, and programmability. We conclude that a polylithic approach is most suitable for toolkit builders, visual design software where code is automatically generated, and application builders where there is much customization of the toolkit. Correspondingly, we find that monolithic approaches appear to be best for application builders where there is not much customization of the toolkit. Index Terms—Monolithic toolkits, polylithic toolkits, object-oriented design, composition, inheritance, Zoomable User Interfaces (ZUIs), animation, structured graphics, Graphical User Interfaces (GUIs), Pad++, Jazz, Piccolo. ! 1 INTRODUCTION A PPLICATION developers rely on User Interface (UI) toolkits such as Microsoft’s MFC and .NET Windows Forms, and Sun’s Swing and AWT to create visual user interfaces. However, while these toolkits are effective for traditional widget-based applications, they fall short when the developer needs to build a new kind of user interface component-one that is not bundled with the toolkit. These components might be simple widgets, such as a range slider or more complex objects, including interactive graphs and charts, sophisticated data displays, timeline editors, zoom- able user interfaces, or fisheye visualizations. Developing application-specific components usually requires significant quantities of custom code to manage a range of features, many of which are similar from one component to the next. These include managing which areas of the window need repainting (called region manage- ment), repainting those regions efficiently, sending events to the internal object that is under the mouse pointer, managing multiple views, and integrating with the under- lying windowing system. Writing this code is cumbersome, yet most standard 2D UI toolkits provide only rudimentary support for creating custom components—typically, just a set of methods for drawing 2D shapes and methods for listening to low-level events. Some toolkits such as Tcl/Tk [19] include a “structured canvas” component, which supports basic structured graphics. These canvases typically contain a collection of graphical 2D objects, including shapes, text, and images. These components could in principal be used to create application-specific components. However, structured can- vases are designed primarily to display graphical data, not to support new kinds of interaction components. Thus, for example, they usually do not allow the application to extend the set of objects that can be placed within the canvas. We have found that many developers bypass these structured canvas components and follow a “roll-your- own” design philosophy, rewriting large quantities of code and increasing engineering overhead, particularly in terms of reliability and programmability. There are also commer- cial toolkits available such as Flash [6] and Adobe SVG Viewer [2]. But, these approaches are often difficult to extend and integrate into an application. We believe future user interface toolkits must address these problems by providing higher-level libraries for supporting custom interface components. However, there is still an open question regarding which design philosophy to adopt for these higher-level toolkits. The core issue we address here is whether toolkits should be designed so that the inevitable complexity and extension of the components are supported primarily through composition (which we call polylithic) or inheritance (which we call monolithic). In this paper, we consider these two design approaches for interactive structured graphics toolkits through two toolkits we built: Jazz, 1 a polylithic toolkit; and Piccolo,2 a IEEE TRANSACTIONS ON SOFTWARE ENGINEERING, VOL. 30, NO. 8, AUGUST 2004 1 . The authors are with the Human-Computer Interaction Laboratory, Institute for Advanced Computer Studies, Computer Science Department, University of Maryland, College Park, MD 20742. E-mail: {bederson, jesse, meyer}@cs.umd.edu. Manuscript received 16 Sept. 2003; accepted 16 Mar. 2004. Recommended for acceptance by D. Weiss. For information on obtaining reprints of this article, please send e-mail to: tse@computer.org, and reference IEEECS Log Number TSE-0145-0903. 1. The name Jazz is not an acronym, but rather is motivated by the music-related naming conventions that the Java Swing toolkit started. In addition, the letter “J” signifies the Java connection, and the letter “Z” signifies the zooming connection. Jazz is open source software according to the Mozilla Public License, and is available at: http://www.cs.umd.edu/ hcil/jazz. 2. The name Piccolo is motivated by the music connection of Jazz and Swing, and because it is so small (approximately one tenth the size of Jazz). Piccolo is open source software according to the Mozilla Public License, and is available at: http://www.cs.umd.edu/hcil/piccolo. 0098-5589/04/$20.00 ! 2004 IEEE Published by the IEEE Computer Society Mouse House Dog Cat DaddyMum Charly Farm Farmer Bulldozer Horse Spider Pig Ofﬁce Computer Printer Papers Boss Buildings Stable search-ﬁlter Type: Animal Mouse Dog Cat Horse Spider iMapping Search iMapping Examples superordinate Node new Text... when [enter] is pressed while editing a node, editing is anded and a Textcursor is set to the position below the node - where a new paragraph would start. entering text Fig. 2. The same iMap but with link-structure of one item made visible. To sum up, this makes three structurally diﬀerent ways of interrelating items in an iMapping environment: – wiki-style text-links (linking from a particular text position to another item) – nesting items into another (including the link target inline at a speciﬁed position) – linking on an item level (stating a relation between two objects) Each of these can be mere navigational links or carry formal semantics, if speciﬁed. 4 Discussion Whether the iMapping approach will be successful, user studies and time will have to tell. It is a concept so far. A ﬁrst prototype environment is under devel- opment and might be available by mid 2006. While our implementation is based on a java client to take advantage of the Piccolo framework (s. above), a ﬂash- or SVG+AJAX-based version would allow browser-based usage, which would come closer to common wiki use. Also, since the iMapping approach was initially designed for personal use, there might be unforeseen diﬃculties when used in a collaborative setting, like most wikis are. For example, there could be dissent on how items should be spa- tially arranged. But hopefully, like it is common in wiki culture, over time layouts will converge to a structure that ﬁnds consensus. Another approach would be to use personal proﬁles to let users make their personalised spatial arrangements of the content. The better the content and its structure represented using de- ﬁned semantics, the easier it is to separate it from its visual appearance and to syndicate it to other applications. 5 Outlook Wikis have started as very simple content management systems and many en- gines have grown immensely feature-rich by now. The step to semantic wikis is very promising and could give the realisation of the Semantic Web a signiﬁcant boost. But it surely doesnt make these wikis easier to use. Focussing on user in- teraction and cognitive ergonomics will be an important point, if semantic wikis are to become widely used whether collaboratively or for personal knowledge management. In the Open Source Social-Semantic-Desktop Project Nepomuk 8, a ﬁrst iMapping Wiki is being developed, and anticipated to become available during 2007. It will then become part of a more comprehensive knowledge work- bench integrating Semantic Desktop functionalities like application integration, and semantic search with a distributed p2p-based collaboration environment. 8 see http://Nepomuk.semanticdesktop.org Acknowledgments: Research reported in this paper has been partially ﬁnanced by the EU in the Social Semantic Desktop project NEPOMUK (IST-FP6-027705). I would also like to thank Benjamin Heitman for fruitful discussions and last-minute technical assistance. References 1. Tergan, S.O.: Hypertext und Multimedia: Konzeption, Lernm¨oglichkeiten, Lern- probleme und Perspektiven. In: Information und Lernen mit Multimedia und Inter- net. third, completely revised edn. Beltz, PVU (2002) 2. Schnotz, W.: Wissenserwerb mit Texten, Bildern und Diagrammen. In: Information und Lernen mit Multimedia und Internet. third, completely revised edn. Beltz, PVU, Weinheim (2002) 3. Richter, J., V¨olkel, M., Haller, H.: Deepamehta - a semantic desktop. In Decker, S., Park, J., Quan, D., Sauermann, L., eds.: Proceedings of the 1st Workshop on The Semantic Desktop. 4th International Semantic Web Conference (Galway, Ireland). Volume 175., CEUR-WS (2005) 4. V¨olkel, M., Oren, E.: Personal knowledge management with semantic wikis (2006) Paper submitted to ESWC2006, available at http://semwiki.ontoware.org/. 5. Oren, E.: Semperwiki: a semantic personal wiki. In: Proceedings of the 1st Workshop on The Semantic Desktop, Galway, Irland. (2005) 6. Haller, H.: Mappingverfahren zur Wissensorganisation (2003) Knowledge Board Europe. Availlable online at http://heikohaller.de/literatur/diplomarbeit/. 7. Shipman, F., Marshall, C.: Spatial hypertext: An alternative to navigational and semantic links. ACM Comp. Surveys 31 (1999) 8. Bederson, B.B., Hollan, J.D., Stewart, J., Rogers, D., Vick, D.: A zooming web browser. Human Factors in Web Development (1998) View publication stats","libVersion":"0.3.2","langs":""}